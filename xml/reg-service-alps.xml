<alps version="1.0">
  <link rel="help" href="..." />
  <doc>
    ALPS Profile for registering components for service discovery
  </doc>

  <!-- elements -->
  <descriptor id="reg_id" type="semantic">
    <doc>scalar value generated by registry service</doc>
  </descriptor>
  <descriptor id="subscribe_to" type="semantic">
    <doc>scalar value of a registered service to which the component would like to subscribe</doc>
  </descriptor>
  <descriptor id="name" type="semantic">
    <doc>non-unique scalar value supplied by component when registering</doc>
  </descriptor>
  <descriptor id="profile_uri" type="semantic">
    <doc>
      URI (possibly URL) that uniquely identifies the domain semantics supported by this service. 
      MAY be a comma-delimited set of profiles.
    </doc>
  </descriptor>
  <descriptor id="ping_promise" type="semantic">
    <doc>integer value representing number of seconds between pings from component to registry</doc>
  </descriptor>
  <descriptor id="description" type="semantic">
    <doc>human-readable text that describes the component. MAY appear in registry listings</doc>
  </descriptor>
  <descriptor id="documentation_url" type="semantic">
    <doc>URL that points to human-readable documentation for the component</doc>
  </descriptor>
  <descriptor id="status" type="semantic">
    <!-- should we have more status strings? in-progress, working, cancelled, etc.? -->
    <doc>
      scalar value that indicates the status of the component. possible values (for this release) are:
      - external actions : submit, update, end
      - internal states  : pending, running, unavailable
      - internal actions : reject, cancel, fail
    </doc>
  </descriptor>
  
  <!-- actions -->
  <descriptor id="index" type="safe" >
    <doc>list of all the available actions for the service. MAY be filtered based on context</doc>
    <descriptor href="#home" />
    <descriptor href="#index" />
    <descriptor href="#ping" />
    <descriptpr href="#register" />
    <descriptor href="#deregister" />
    <descriptor href="#update" />
    <descriptor href="#read" />
    <descriptor href="search" />
  </descriptor>
  
  <descriptor id="home" type="safe">
    <doc>root resource of the service</doc>
  </descriptor>

  <descriptor id="search" type="safe" >
    <doc>use this to search the registry for components that match the supplied filter criteria</doc>
    <descriptor href="#name" />
    <descriptor href="#profile" />
    <descriptor href="#description" />
    <descriptor href="#status" />
  </descriptor>

  <descriptor id="ping" type="safe">
    <doc>use this to 'ping' the registry to indicate a component is 'alive'</doc>
    <descriptor href="#reg_id" />
  </descriptor>

  <descriptor id="register" type="idempotent">
    <doc>use this to register a component with the registry service</doc>
    <descriptor href="#name" />
    <descriptor href="#profile" />
    <descriptor href="#ping_promise" />
    <descriptor href="#description" />
    <descriptor href="#documentation" />
    <descriptor href="#status" />
  </descriptor>

  <descriptor id="deregister" type="idempotent">
    <doc>use this to de-register a component with the registry service</doc>
    <descriptor href="#reg_id" />
  </descriptor>

  <descriptor id="subscribe" type="idempotent">
    <doc>Use this to establish an interaction with a component in the registry service.</doc>
    <descriptor href="#reg_id" />
    <descriptor href="#subscribe_to" />
  </descriptor>  

  <descriptor id="unsubscribe" type="idempotent">
    <doc>Use this to end an interaction with a component in the registry service.</doc>
    <descriptor href="#reg_id" />
    <descriptor href="#unsubscribe_to" />
  </descriptor>  

  <descriptor id="update" type="idempotent">
    <doc>use this to update/modify a component's registry entry at the registry service</doc>
    <!-- what values of a reg-record SHOULD NOT be updated? -->
    <descriptor href="#reg_id" />
    <descriptor href="#ping_promise" />
    <descriptor href="#description" />
    <descriptor href="#status" />
  </descriptor>

  <descriptor id="read" type="safe">
    <doc>use this to retrieve a representation of an existing service component listed in the registry</doc>
    <descriptor href="#reg_id" />
  </descriptor>  
  
</alps>
